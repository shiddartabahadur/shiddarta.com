{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"syd-dev.com ","configs":{"countOfInitialPost":10}}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"<blockquote>\n<p><code class=\"language-text\">FunctionalDataOperation</code> implemented previously has hit a bottleneck due to a lack of built-in error handling.</p>\n</blockquote>\n<h2 id=\"a-few-things-to-note\" style=\"position:relative;\"><a href=\"#a-few-things-to-note\" aria-label=\"a few things to note permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>A few things to note:</h2>\n<ul>\n<li>We are now dealing with <code class=\"language-text\">FunctionalDataOperation&lt;Result&lt;Element, AnyError>></code>. The question is, can we do better?</li>\n<li>This is a follow-up to the article: Making Core Data Functional.</li>\n<li>Before we start, here’s a quick overview of FunctionalDataOperation.</li></ul>","fields":{"slug":"/machine-learning/Error-Handling-in-Functional-Data-Operation/"},"frontmatter":{"date":"18/05/2021","title":"Error Handling in Functional Data Operation","category":"iOS","draft":false}}},{"node":{"excerpt":"<blockquote>\n<p>Using functional-programming, we aim to make thread-management task in CoreData easier by creating new containers.</p>\n</blockquote>\n<h2 id=\"thread-safety\" style=\"position:relative;\"><a href=\"#thread-safety\" aria-label=\"thread safety permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Thread safety</h2>\n<p>Many operations in CoreData are wrapped in either an async perform blocks, or their synchronous counterpart <code class=\"language-text\">performAndWait</code> . Both referred as the perform blocks hereafter.</p>","fields":{"slug":"/machine-learning/Making-Core-Data-Functional/"},"frontmatter":{"date":"25/04/2021","title":"Making Core Data Functional","category":"iOS","draft":false}}},{"node":{"excerpt":"<blockquote>\n<p>This is about the creation of Result type in Swift 5 standard library – and how each of its methods is derived and implemented.</p>\n</blockquote>\n<h2 id=\"introduction\" style=\"position:relative;\"><a href=\"#introduction\" aria-label=\"introduction permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Introduction</h2>\n<p>Swift’s very first error handling <code class=\"language-text\">API</code> (i.e. try-throw-catch), was first introduced in Swift 2.0 to allow developers to propagate errors irrespective of the return type. We will re-implem…</p>","fields":{"slug":"/API/(RE)Designing-Objective-C-APIs-in-Swift/"},"frontmatter":{"date":"26/02/2021","title":"(RE)Designing Objective-C APIs in Swift","category":"API","draft":false}}}]}},"pageContext":{}},"staticQueryHashes":["3128451518","4154702432"]}